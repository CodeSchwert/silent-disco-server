worker_processes 1;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            record off;

            # Incoming RTMP stream
            allow publish all;
            # Serve RTMP stream
            allow play all;
            # Serve HLS stream
            hls on;
            hls_path /var/hls/live;
            hls_fragment 3;
            hls_playlist_length 60;
        }

        # Store the incoming RTMP stream on disk
        # application recorder {
        #     live on;
        #     record all;
        #     record_path /var/rec;
        #     record_unique on;
        #     record_suffix -%d-%b-%y-%T.flv;
        # }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    directio 512;
    include  /etc/nginx/mime.types;

    server {
        listen 80;

        # CORS configuration for the whole http server
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

        # Serve the HLS stream to clients
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /var/hls/live;
        }

        # Location block to serve the disco-app
        location / {
            root /usr/local/nginx/html;
            # index index.html;
            try_files $uri /index.html;
        }

        # serve static files from the React app
        location /static {
            # Serve static files
            expires max;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            access_log off;

            # Root directory for static files
            alias /usr/local/nginx/html/static;
        }
      }
    }

